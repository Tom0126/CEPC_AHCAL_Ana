
void plot(){
    const int nbins = 57;
    const int sipmNo = 210;
    const int sensorNo = 16;
    double posX[sensorNo]={1559,-4181,3543,-871,-4090,-20,-2372,2328,1113,-1982,3976,-4200,-4185,4170,-1854,2097};
    double posY[sensorNo]={1354,1342,439,516,-318,-290,-1359,-1328,-2129,-2985,-3995,-3996,4006,4017,2783,2769};
    //double temp[sensorNo]={20.7812,20.6406,20.5859,20.1406,20.4297,20.4688,20.875,21.0547,20.7109,20.4688,19.5703,19.2656,21.4062,20.75,21.4219,21.5703};
    double temp[sensorNo]={16.8594, 15.5781, 16.4141, 16.5156, 15.6328, 16.5703, 17.3828, 16.7734, 17.2188, 16.75, 15.3984, 16.1875, 16.0625, 16.7109, 17.3281, 16.875};
    TH2D* hh = new TH2D("hh","",nbins,-114,114,nbins,-114,114);
    for(int i=0; i<sensorNo; i++){
        posX[i] *= 0.0254;
        posY[i] *= 0.0254;
        cout<<-posY[i]<<",";
        hh->Fill(posX[i],posY[i],temp[i]);
    }

    double sipmX[sipmNo]={-4277.58,-4068.97,-3860.36,-3651.75,-3443.14,-3234.53,-3025.92,-2817.31,-2608.7,-2400.09,-2191.48,-1982.87,-1774.26,-1565.65,-1357.04,-1148.43,-939.82,-731.21,-522.6,-313.99,-105.38,103.23,311.84,520.45,729.06,937.67,1146.28,1354.89,1563.5,1772.11,1980.72,2189.33,2397.94,2606.55,2815.16,3023.77,3232.38,3440.99,3649.6,3858.21,4066.82,4275.43,-4277.58,-4068.97,-3860.36,-3651.75,-3443.14,-3234.53,-3025.92,-2817.31,-2608.7,-2400.09,-2191.48,-1982.87,-1774.26,-1565.65,-1357.04,-1148.43,-939.82,-731.21,-522.6,-313.99,-105.38,103.23,311.84,520.45,729.06,937.67,1146.28,1354.89,1563.5,1772.11,1980.72,2189.33,2397.94,2606.55,2815.16,3023.77,3232.38,3440.99,3649.6,3858.21,4066.82,4275.43,-4277.58,-4068.97,-3860.36,-3651.75,-3443.14,-3234.53,-3025.92,-2817.31,-2608.7,-2400.09,-2191.48,-1982.87,-1774.26,-1565.65,-1357.04,-1148.43,-939.82,-731.21,-522.6,-313.99,-105.38,103.23,311.84,520.45,729.06,937.67,1146.28,1354.89,1563.5,1772.11,1980.72,2189.33,2397.94,2606.55,2815.16,3023.77,3232.38,3440.99,3649.6,3858.21,4066.82,4275.43,-4277.58,-4068.97,-3860.36,-3651.75,-3443.14,-3234.53,-3025.92,-2817.31,-2608.7,-2400.09,-2191.48,-1982.87,-1774.26,-1565.65,-1357.04,-1148.43,-939.82,-731.21,-522.6,-313.99,-105.38,103.23,311.84,520.45,729.06,937.67,1146.28,1354.89,1563.5,1772.11,1980.72,2189.33,2397.94,2606.55,2815.16,3023.77,3232.38,3440.99,3649.6,3858.21,4066.82,4275.43,-4277.58,-4068.97,-3860.36,-3651.75,-3443.14,-3234.53,-3025.92,-2817.31,-2608.7,-2400.09,-2191.48,-1982.87,-1774.26,-1565.65,-1357.04,-1148.43,-939.82,-731.21,-522.6,-313.99,-105.38,103.23,311.84,520.45,729.06,937.67,1146.28,1354.89,1563.5,1772.11,1980.72,2189.33,2397.94,2606.55,2815.16,3023.77,3232.38,3440.99,3649.6,3858.21,4066.82,4275.43};
    double sipmY[sipmNo]={};
    for(int i=0; i<sipmNo; i++){
        sipmX[i] *= 0.0254;
        sipmY[i] *= 0.0254;
    }

    for(int i=0; i<nbins; i++){
        for(int j=0; j<nbins; j++){
            double x = -114+0.5+i;
            double y = -114+0.5+j;
            double temp_loc=0;
            double sum=0;
            double length=0;
            for(int g=0; g<sensorNo; g++){
                length = sqrt(pow((x-posX[g]),2)+pow((y-posY[g]),2));
                sum += 1/length;}
            for(int k=0; k<sensorNo; k++){
                length = sqrt(pow((x-posX[k]),2)+pow((y-posY[k]),2));
                double weight = 1/length/sum;
                temp_loc += weight*temp[k];
            }
           // hh->Fill(x,y,temp_loc);
            //if(x==50.5) cout<<x<<", "<<y<<", "<<temp_loc<<endl;
        }}
        //cout<<hh->GetBinContent(1,1)<<", "<<hh->GetBinContent(200,200)<<endl;

    TGraph* gpTemp = new TGraph(sensorNo,posX,posY);
    TGraph* gp = new TGraph(sipmNo,sipmX,sipmY);

    TH2D* hplot = new TH2D("hplot","",10,-114,114,10,-114,114);
    TCanvas* cc = new TCanvas("cc","",10,10,900,800);
    gStyle->SetOptStat(false);
    gPad->SetMargin(.14,.12,.11,.1);
    gPad->SetGridx();
    gPad->SetGridy();
    //gPad->SetLogz();
    hplot->Draw();
    hplot->GetXaxis()->SetTitle("X Position [mm]");
    hplot->GetXaxis()->CenterTitle();
    hplot->GetYaxis()->SetTitle("Y Position [mm]");
    hplot->GetYaxis()->CenterTitle();
    hplot->GetZaxis()->SetRangeUser(14,18);
    gp->SetMarkerStyle(21);
    gp->SetMarkerSize(1);
    gp->SetMarkerColor(2);
    //gpTemp->SetMarkerStyle(21);
    //gpTemp->SetMarkerSize(2);
    //gpTemp->SetMarkerColor(2);
    //gpTemp->Draw("sameP");
    hh->Draw("sameCOLZ");
    gp->Draw("sameP");

}
